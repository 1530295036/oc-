Cocoa提供了两个根类：NSObject和NSProxy。Cocoa将后者定义为抽象类，用于表示其他对象的替身对象。
因此NSProxy类在分布对象架构中是很重要的。由于作用比较特别，NSProxy在iOS程序中出现频率很低，iOS开发在提到根类时，几乎总是指NSObject
NSObject简介
NSObject时大多数oc类层次的根类，它没有父类。其他类通过从NSObject继承来访问oc语言运行时系统的基本接口，它们的实例可以得到对象行为能力。
oc不是一个严格的抽象类，它只是一个虚类。一个NSObject实例除了可以作为一个简单的对象外，基本上不能再完成任何有用的工作了。
为此在程序中加入特有的属性和逻辑，必须创建一个或多个从NSObject或其派生类继承下来的类。
NSObject采纳了NSObject协议。该协议支持多个根对象。举例来说，NSProxy是另一个根类，它不是继承自NSObject，但采纳了NSObject协议，以便和其他oc对象公用一个公共的接口。
NSObject和java.lang.Object一起，是java版本的Cocoa中所有类的根类，包括Foundation和Application kit
根类和协议
NSObject不仅是一个类的名称，还是一个协议的名称。两者对于定义一个oc对象都是必要的。
NSObject协议指定了oc中所有根类必须有的基本编程接口，因此NSObject类不仅采纳了这个同名的协议，其他根类也采纳了这个协议，例如NSProxy。NSObject类还进一步指定了不作为代理对象的oc对象的基本接口。
NSObject及类似的协议用于Cocoa对象的总体定义（而不是在类接口中包含那些协议），使多个根类成为可能。
每个根类共用一个由它们采纳的协议定义的公共接口。
在另一种意义上，NSObject不仅仅是一个“根”协议。虽然NSObject类没有正式采纳NSCopying、NSMutableCopying和NSCoding协议，但它声明和实现了那些协议相关的方法
（而且包含了NSObject类的NSObject.h头文件中
