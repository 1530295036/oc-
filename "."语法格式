oc提供类一个点操作符"."来代替方括号（[])进行方法调用。点语法使用和访问C语言结构体元素有相同的格式：
myInstance.value = 10;
printf("myInstance value;%d",myInstance.value);
在拥有对象时，点语法会使代码更简单易读，编译器会将其编译为访问方法（即accessor method，这样翻译的准确性尚不确定，类似于其他语言中的get/set方法）。点语法不会直接读取或修改一个实例变量。
上面和下面这段代码时完全相同的：
[myInstance setValue:10];
print("myInstance value: %d",[myInstance value]);
如果一个对象想要通过访问方法来访问自己的实例变量，就必须明确地使用self：
self.age = 10;
等价于：
[self setAge:10];
如果没有使用self.，那么就是直接访问的实例变量，如下所示就没有调用age的访问方法：
age = 10;
编译器可以在代码时图修改一个只读属性时报错。
如果使用方括号语法访问变量，编译器在最好情况下只能报出一个引用了不存在的setter方法的未声明方法警告，并且代码会运行失败。

"."语法格式一般用法
当使用点语法读取一个值时，系统会调用相关的getter访问方法。默认的getter方法名为点以后点字符。
使用点语法为变量赋值会调用关联的setter访问方法。默认的setter方法名将为点以后点字符首字母大写并在前面加一个set。
如果不希望使用默认的访问方法名，可以使用声明对象属性来修改它们。

nil值
如果在属性遍历过程中遇到一个nil值，那么所得到的结果和向nil发送一个等价的消息是相同的。

