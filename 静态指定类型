可以用一个类名来代替id取定义一个对象，例如
Rectangle *myRectangle；
这种声明对象类型的方法明确把对象的类型告诉来编译器，因此被称为静态指定类型。
和ID是一个指针一样，静态指定类型对象呗静态的指定来一个类的指针作为类型。
对象的类型通常是由指针来指定的，只不过静态类型是明确指向来某一个类的，而id是隐藏的。
静态指定类型允许编译器做一些类型校验，例如，在一个指定类型的对象接收到一个无法响应的消息时（如对象中没有消息所指定的方法），编译器会发出警告。而那些id类型的对象就没有这种限制类。
同时，静态指定类型可以使阅读代码的用户更清楚编程者的意图。不过这样做并不会破坏动态绑定或改变运行时对接受者的类进行动态确定。
一个类型的对象可以被静态指定为这个类所继承的类的对象。例如，aRectangle对象（Rectangle类型）继承自Graphic，所以myRectangle可以被静态指定为Graphic类型：
Graphic *myRectangle；
像上面这样讲静态指定为父类类型是可以的，因为Rectangle对象同时也是一个Graphic对象。另外，虽然对象被指定为Graphic类型，但是它同时拥有Shape和Rectangle中的方法和实例变量。
在运行时，不管myRectangle对象是否被初始化并分配内存，都会被认为是一个Rectangle类型的对象。
