oc调用函数时的传参机制与调用方法的传参机制完全相同，都是值传递，都是穿入参数的副本。
当然，如果使用指针变量作为参数，由于指针变量保存的是副本，因此虽然穿入的是指针变量的副本，但也是地址传递。
方法不难独立存在，必须属于类或对象。
如果需要定义方法，则只能在类中定义，不能独立定义一个方法（只能定义函数）。
一旦将这个方法定义在某个类体内，如果这个方法使用类“+”标识，则此方法属于这个类的实例。
因为oc中的方法不能独立存在，必须属于一个类或一个对象，因此方法不能向函数那样独立执行，执行方法时必须使用类或对象作为调用者，即所有方法都必须使用"[类 方法]"或"[对象 方法]"的形式来调用。
永远不要把方法当独立存在的实体，正如现实世界可看成由类和对象组成，而方法只能作为类和对象的附属，oc中的方法也是一样。
oc中方法的所属性体现在如下4方面：
方法不能独立定义，只能在类体内定义
从逻辑上看，方法要么属于类本身，要么属于该类的一个对象。
永远不能独立执行方法，执行方法时必须使用类或对象作为调用者
使用“+”表示的方法属于这个类本身，因此只能用于类作为调用者来调用该方法；使用“-”标识符的方法属于该类的实例，必须用实例作为调用者来调用。
