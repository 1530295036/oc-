类别（Category）和扩展（Extension）这两个概念，是为oc程序员提供的两个强大的动态机制，类别和扩展提供类区别于继承的另外一种对类进行扩展的方法，允许通过向任何已有的类添加成员函数来实现功能上的扩展
category只允许添加成员函数，不允许添加数据成员，添加的函数可以访问类中所有的数据成员，该类的子类也将继承重新添加的成员函数。
除此之外，category还允许将一个类的实现分布在几个不同的文件中。
Extension同category类似，但是允许在@interface以外的地方为类声明API。
1.Category
可以在一个类的接口文件中的category名下为类声明方法，同时在实现文件中相同方法名下实现这些方法。一个Category名代表一个为类声明一些方法，而不是一个新类。
但是不能为一个类声明新的数据成员（实例变量）
category添加的方法会成为类类型的一部分
category中的方法同类中定义的方法一样。在运行时，没有任何区别，通过category添加的方法同样可以被子类继承。
Category的声明与一个类接口的声明非常相似，不同的是Category名称要写在类名后面的一对括号内，并且没有父类的声明。
类的Category必须引用类的接口文件，除非他的方法不访问类的任何实例变量，其格式如下：
#import“ClassName.h”
@interface ClassName(CategoryName)
//声明方法
@end
可以为一个类声明多个Category（在数量上没有限制），但是每个Category名字必须不同，并且每个Category中都可以定义不同的一组方法。
