Cocoa提供了两个根类：NSObject和NSProxy。Cocoa将后者定义为抽象类，用于表示其他对象的替身对象。因此，NSProxy类在分布对象架构中很重要。由于作用特别，NSProxy在iOS程序中频率很低，iOS开发在提到根类时，几乎总是指NSObjectNSObject简介NSObject是大多数oc类的根类，它没有父类。其他类通过继承NSObject来访问oc语言运行时系统的基本接口，它们的实例可以得到对象行为能力。
oc 不是一个严格的抽象类，它只是一个虚类。
NSObject实例除了可以作为一个简单的对象，基本上不能再完成任何有用的工作了。为此，在加入特有的属性和逻辑程序中，必须创建一个或多个类继承的NSObject或其派生类。NSObject采纳了NSObject协议。该协议支持多个根对象。NSProxy是另一个根类，它不是继承自NSObject，但采纳了NSObject协议，以便公用一个公共接口和其他oc对象。NSObject与java.lang.Object一起，是所有类的Java版本的Cocoa，包括Foundation和Application kit根类和协议NSObject 不仅是一个类，还是一个协议的名称。两者都为定义一个oc对象。
NSObject协议指定了所有根类必须具备的基本编程接口的oc，因此NSObject类不仅采纳了同名协议，其他根类也采纳了此协议，例如NSProxy。NSObject类还进一步指定了oc对象的基本接口，不作为代理对象。NSObject和类似的协议用于Cocoa对象的总体定义（而不是包含那些协议的类接口），使多个根类成为可能。每个根类共用一个公共接口，由它们采纳的协议。在另一种意义上，NSObject不仅仅是一个“根”协议。虽然NSObject类没有正式采纳NSCopying、NSMutableCopying和NSCoding协议，但它声明并实现了那些协议相关的方法（以及包含NSObject.h头文件中包含NSObject类的也包含4个协议的定义）
对象复制、编码和解码是其行为的基本部分。很多子类（但不是绝大多数）希望采纳和遵循这些协议。
注意：其他Cocoa类可以通过范畴将方法添加到NSObject中。这些范畴通常是一些非正式协议，在委托中使用，允许委托对象选择部分方法实现范畴。
然而，范畴不认为是基本对象接口的一部分。
