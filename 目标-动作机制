Cocoa通过目标-动作机制实现控件和对象的通信。
这个机制使控件和其单元可以把向恰当对象发送应用程序具体指令所需要的信息封装起来。
目标是动作消息的接收者。一个控件或单元以 插座变量 的形式保有其动作消息的目标。
动作是控件发送给目标的消息。
对用户感兴趣的对象，即目标，就是为用户事件给出意义的对象，这个意义通常在动作的名称中反映出来 。
控件、单元和菜单项
大多数控件和对象都是从NSCoontrol类继承下来的。控件的任务是将动作消息发送给目标，因为很少携带发送消息所需要的信息，所以需要依赖于它的单元。
一个控件总是有一个或多个关联的单元，也就是从NSCell类继承下来的对象。
用interface builder进行设置的流程：
在定制类中定义动作的方法。
在定制类生成一个实例（如果这种实例尚未存在）。
按住Control键，同时拽出一条从控件或单元对象到代表定制类实例的连接线。
在查看器窗口的Connections面板中选择动作的制作方法，并单击Connect按钮。
如果动作是由定制类的超类或复活的Application Kit类处理，则可以跳过第一步。当然，如果自行定义类动作方法，就必须确保提供相应的实现。
详情看730页

绑定
绑定是一种Cocoa计数，用于同步应用程序中数据显示和存储，是激活对象间通讯的重要工具。
绑定接用了模型——视图——控制器和对象建模两种设计模式定义的概念空间。
视图对象显示应用程序的数据。
模型对象负责封装和操作应用程序数据，用户在应用运行程序时对其进行创建和保存。
控制器对象负责协调试图和模型对象之间的数据交换，同时还为应用程序执行“命令和控制”服务。
绑定技术使用这个对象模型来建立应用程序中的视图、模型和控制器对象之间的绑定关系。

