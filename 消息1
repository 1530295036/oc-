oc对象化最大的特色就是消息传递模型。在oc中，对象不是简单的调用方法，而是传递消息，这与流行的C++对象型风格大不一。差异主要体现在调用方法和传递消息。在C++中，类和方法的关系非常紧密，一个方法必定属于一个类，而且编译时间方法与类紧密结合在一起，另外，不可能调用一个不存在的类。在oc中，类与消息的关系较为松散，所有方法都被视为对消息的回应，而调用方法则被视为发送消息的类。消息处理不进行动态决定，直到执行期，由类自行决定如何处理收到的消息。也就是说，一个类不保证一定会回复收到的消息，如果一个无法处理的消息，程序不会出错或立即关掉，只会抛出异常。定义消息要想让一个对象去做些什么，只需要发一个消息，告诉他去执行一个方法。消息表达式在oc中写在括号中。[接收消息]接收者是对象，消息会告诉它要去做什么。在源码中，消息只不过是方法名和变量给接受者。当消息发送时，运行时系统从接收者的方法列表中选择合适的方法并调用。下面消息告诉myRectangle对象执行其显示方法显示矩形区域：[myRectangle 显示器]；消息以“;”结尾，与c语言一样表达。因为方法名负责选择方法执行的在消息中，所以方法名通常被称为选择器。方法可以传递参数，一个参数的消息通常在“:”之后，再接一个参数[myRectangle setWidth：20.0]；对于方法有多个参数，通过方法名称和参数交替表达所需的参数。信息中告诉myRectangle对象设置起始坐标为（30.0，50.0）：[myRectangle setOriginX：30.0 y：50.0];选择器名称包含包含方法名称的所有部分，包括分音，所以选择器名称为setOrigin x:y:。因为此时的方法有两个参数，所以选择器名称有两个冒号。选择器不包含其他内容，例如返回值类型或参数类型。注意：包含的可选器名称不可选，其顺序也变化。在一些语言中，命名参数和关键字参数暗示参数在运行时可变，可以有默认值，可以有不同的调用顺序，同时可以命名附加参数。特性的这些参数都用不下OC。其实一个oc方法声明加两个额外的参数就是一个c语言函数声明（在c语言中需要声明函数返回值类型和参数类型）。因此，oc的方法声明结构与使用名字或关键词的python是不同的。方法的参数数可以变化，尽管它们非常少见。附加参数由逗号分隔，并接在方法名（与分形不同，逗号不是选择器名称）。在下面的代码中，方法makeGroup：传递一个必须参数（group）和3个可选参数：[接收器制作组：组，成员一，成员二，成员三]；和标准C函数一样，oc方法可以有返回值。在下面的代码中，当myRectangle是实心矩形时，变量isFilled为YES，myRectangle是空心矩形，变量isFilled为NO

